{"version":3,"sources":["theme.tsx","page/hooks/useTabItems.ts","organisms/Header.tsx","atom/Loading.tsx","atom/ErrorSnack.tsx","template/Template.tsx","store.ts","page/Home.tsx","atom/UploadButton.tsx","molecules/UploadArea.tsx","organisms/FileUploader.tsx","generated/graphql.ts","page/NewFile.tsx","page/hooks/useModal.ts","page/hooks/useRoicWacc.ts","util/dataTransform.ts","organisms/ColumnFilterModal.tsx","page/Table.tsx","util/createCsvString.ts","page/Scatter.tsx","page/hooks/useIntervalFunc.ts","page/Tree.tsx","organisms/CompanySetting.tsx","page/Setting.tsx","page/hooks/useCompanySettings.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createTheme","useTabItems","isDataLoaded","history","useHistory","tabItems","useMemo","label","onClick","push","disabled","Header","props","AppBar","position","Toolbar","Typography","variant","children","Paper","Tabs","value","tabSelected","map","tab","Tab","Loading","Backdrop","sx","color","zIndex","drawer","open","CircularProgress","ErrorSnack","Alert","forwardRef","ref","elevation","useState","error","setOpen","handleClose","event","reason","Snackbar","onClose","severity","width","message","ContentContainer","styled","div","Template","loading","localCompanyDataVar","makeVar","isDataLoadedVar","companySettingVar","typePolicies","Query","fields","localCompanyData","read","typeDefs","gql","Home","useReactiveVar","component","href","UploadButton","Button","successText","errorText","disable","handleButtonClick","fullWidth","size","StyledPaper","GuideText","UploadArea","useDropzone","accept","onDropAccepted","files","setAcceptedFiles","getRootProps","getInputProps","rootProps","data-testid","acceptedFiles","length","f","name","FileUploader","handleUpload","UploadExcelDocument","GetLocalDataDocument","CalcRoicWaccDocument","NewFilePres","NewFile","useMutation","onCompleted","data","localData","uploadSpeedaExcel","companyData","d","__typename","others","metrics","othersMetrics","colors","Set","companyName","i","visibility","console","info","window","setTimeout","onError","uploadFunc","a","variables","c","undefined","useModal","modalOpen","setModalOpen","handleModalOpen","handleModalClose","useRoicWacc","onComplete","setData","useQuery","queryResponse","refetchRoic","prevData","calcRoic","calcDrivers","sort","b","err","refetch","toTableColumn","filter","columns","metricsName","key","x","includes","toScatterData","y","yearIndex","companyColor","companies","xAxisData","reduce","prev","current","set","metricsValues","Map","yAxisData","company","get","type","mode","text","textposition","marker","ModalContent","FlexContainer","ColumnFilterModal","handleAllUncheck","useCallback","handleFilterChange","handleAllCheck","Modal","List","col","ListItem","e","ListItemIcon","CheckBoxOutlineBlank","CheckBox","ListItemText","primary","ButtonContainer","Table","setExpandedGroupIds","tableData","expandedGroupIds","rows","yearCompanyMap","flatMap","metricsYears","year","JSON","stringify","t","forEach","row","Object","assign","yearCompanyName","parse","企業名称","年度","toTableRow","allColumns","columnFilter","setColumnFilter","filteredColumns","column","startIcon","PermDataSetting","Save","csvString","join","slice","createCsvString","bom","Uint8Array","blob","Blob","url","URL","createObjectURL","document","createElement","download","click","remove","style","height","groupBy","rowGrouper","className","onExpandedGroupIdsChange","defaultColumnOptions","resizable","Scatter","setYearIndex","func","interval","isActive","setIsActive","intervalId","setIntervalId","startInterval","id","setInterval","stopInterval","clearInterval","toggleInterval","useIntervalFunc","isYearMoving","companySetting","setting","companyVisibility","roicWaccData","nopatCapitalData","gridSx","display","justifyContent","Grid","container","item","md","sm","layout","showlegend","title","xaxis","rangemode","tickformat","yaxis","shapes","x0","y0","x1","y1","xref","yref","line","dash","columnGap","alignItems","ToggleButtonGroup","ToggleButton","IconButton","Stop","PlayArrow","Tree","roicData","metrics_position","ROIC","投下資本回転率","NOPATマージン","固定資産回転率","運転資本回転率","販管費率","売上原価率","toTreeData","annotations","showarrow","align","domain","anchor","xaxis2","xaxis3","yaxis2","yaxis3","yaxis4","yaxis5","yaxis6","yaxis7","config","responsive","CompanySetting","setColor","focusedCompanyIndex","setFocusedCompanyIndex","Chip","onDelete","setVisibility","deleteIcon","Visibility","VisibilityOff","background","hexColor","parseInt","substr","top","left","transform","onChange","_","hex","Setting","companySettings","index","useCompanySettings","Providers","basename","process","StyledEngineProvider","injectFirst","routing","path","App","r","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","link","createUploadLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.9f8eeb36.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({});\n\nexport default theme;\n","import { useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { HeaderProps } from \"../../organisms/Header\";\nexport const useTabItems = (isDataLoaded = true): HeaderProps[\"tabItems\"] => {\n  const history = useHistory();\n  const tabItems = useMemo<HeaderProps[\"tabItems\"]>(\n    () => [\n      {\n        label: \"Home\",\n        onClick: () => history.push(\"/\"),\n      },\n      {\n        label: \"新規分析\",\n        onClick: () => history.push(\"/new\"),\n      },\n      {\n        label: \"データ確認\",\n        onClick: () => history.push(\"/table\"),\n        disabled: !isDataLoaded,\n      },\n      {\n        label: \"ROIC-WACCグラフ\",\n        onClick: () => history.push(\"/scatter\"),\n        disabled: !isDataLoaded,\n      },\n      {\n        label: \"ROICツリー\",\n        onClick: () => history.push(\"/tree\"),\n        disabled: !isDataLoaded,\n      },\n      {\n        label: \"表示設定\",\n        onClick: () => history.push(\"/setting\"),\n        disabled: !isDataLoaded,\n      },\n    ],\n    [history, isDataLoaded]\n  );\n  return tabItems;\n};\n","import React from \"react\";\nimport { AppBar, Paper, Tab, Tabs, Toolbar, Typography } from \"@mui/material\";\nimport { useHistory } from \"react-router\";\n\nexport type HeaderProps = {\n  children: React.ReactText;\n  tabItems: {\n    label: string;\n    onClick: () => void;\n    disabled?: boolean;\n  }[];\n  tabSelected: number;\n};\nconst Header: React.FC<HeaderProps> = (props) => {\n  const history = useHistory();\n  const handleTitleClick = () => {\n    history.push(\"/\");\n  };\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h5\" onClick={handleTitleClick}>\n            {props.children}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Paper>\n        <Tabs value={props.tabSelected}>\n          {props.tabItems.map((tab) => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              disabled={tab.disabled}\n              onClick={tab.onClick}\n            />\n          ))}\n        </Tabs>\n      </Paper>\n    </>\n  );\n};\n\nexport default Header;\n","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst Loading: React.FC = () => {\n  return (\n    <Backdrop\n      sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n      open={true}\n    >\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default Loading;\n","import Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport { forwardRef, useState } from \"react\";\nimport { ApolloError } from \"@apollo/client\";\n\nconst ErrorSnack: React.FC<{ error?: ApolloError }> = (props) => {\n  const Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref\n  ) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n  const [open, setOpen] = useState(!!props.error);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <Snackbar open={open} onClose={handleClose}>\n      <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\n        {props.error?.message}\n      </Alert>\n    </Snackbar>\n  );\n};\nexport default ErrorSnack;\n","import Header from \"../organisms/Header\";\nimport styled from \"styled-components\";\nimport { ApolloError } from \"@apollo/client\";\nimport Loading from \"../atom/Loading\";\nimport ErrorSnack from \"../atom/ErrorSnack\";\n\nconst ContentContainer = styled.div`\n  margin-top: 1ex;\n  margin-left: 1vw;\n  margin-right: 3vw;\n`;\nexport type TemplateProps = {\n  children: React.ReactNode;\n  tabItems: {\n    label: string;\n    onClick: () => void;\n    disabled?: boolean;\n  }[];\n  tabSelected: number;\n  loading?: boolean;\n  error?: ApolloError;\n};\nconst Template: React.FC<TemplateProps> = (props) => {\n  return (\n    <>\n      {props.loading && <Loading />}\n      {props.error && <ErrorSnack error={props.error} />}\n      <Header tabItems={props.tabItems} tabSelected={props.tabSelected}>\n        QuickRoic\n      </Header>\n      <ContentContainer>{props.children}</ContentContainer>\n    </>\n  );\n};\n\nexport default Template;\n","import { makeVar, TypePolicies } from \"@apollo/client\";\nimport { CompanyData } from \"./generated/graphql\";\nimport { gql } from \"graphql-tag\";\n\nexport const localCompanyDataVar = makeVar<CompanyData[]>([]);\nexport const isDataLoadedVar = makeVar(false);\nexport const companySettingVar = makeVar<\n  { name: string; color: string; visibility: boolean }[]\n>([]);\nexport const typePolicies: TypePolicies = {\n  Query: {\n    fields: {\n      localCompanyData: {\n        read() {\n          return localCompanyDataVar();\n        },\n      },\n    },\n  },\n};\nexport const typeDefs = gql`\n  extend type Query {\n    localCompanyData: [CompanyData!]!\n  }\n`;\n","import { Typography } from \"@mui/material\";\nimport { useTabItems } from \"./hooks/useTabItems\";\nimport Template from \"../template/Template\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { isDataLoadedVar } from \"../store\";\n\nconst Home: React.FC = () => {\n  const isDataLoaded = useReactiveVar(isDataLoadedVar);\n  const tabItems = useTabItems(isDataLoaded);\n  return (\n    <Template tabItems={tabItems} tabSelected={0}>\n      <Typography variant=\"h4\" component=\"h2\">\n        QuickRoicとは\n      </Typography>\n      <p>\n        SPEEDAからダウンロードしたデータを元にROIC分析を簡単に行うためのツールです。ブラウザ上でROICツリーなどの分析結果を確認できるだけでなく、分析結果をダウンロードして資料に使ったり、CSVで出力してローカルでさらなる分析を行うことも可能です\n      </p>\n      <Typography variant=\"h4\" component=\"h2\">\n        使い方\n      </Typography>\n      <p>To Be Written.</p>\n      <Typography variant=\"h4\" component=\"h2\">\n        留意事項\n      </Typography>\n      <p>\n        あくまで私的に開発して私的に運用しているツールです。（オフィシャルに運用しようとと思うと諸々の審査・申請が死ぬほど面倒なので・・・）以下の留意事項を理解してご使用ください。\n      </p>\n      <ul>\n        <li>\n          結果の正確性・完全性については保障できません。テストケースについては、\n          <a href=\"https://github.com/ku-mok/QuickRoic\">コードレポジトリ</a>\n          のsample_casesディレクトリ内を確認ください。InputSpeedFile.xlsxを元として、\n          整形されたものが DataframeExpected.xlsx ROIC計算まで行ったものが\n          RoicExpected.xlsxです。コーポレートファイナンス強い方の検算をお待ちしております。\n        </li>\n        <li>\n          必要なセキュリティ上の措置（通信経路の暗号化やサーバへの侵入防止、送信されたデータは処理後すぐに削除するなど）は行っておりますが、オフィシャルのセキュリティ審査も通っていないので、\n          <strong>\n            非上場企業の財務諸表や事業別財務諸表など、クライアント情報を含むデータを\n            SPEEDAの形式に乗せ換えて\n            絶対に送信する行為は絶対に行わないでください。\n          </strong>\n        </li>\n        <li>\n          (技術的補足)送信されたExcelファイルは読み取り後即座に削除されます。サーバ側が完全にステートレスで読み取り結果もサーバ側には保存されていません（分析のたびにクライアントから送信されています）。クライアントから送信される情報はHTTPS通信により暗号化されており、一般に盗聴は非常に困難です。リバースプロキシサーバにてTLS終端処理を行うため、上田の家のネットワークのLAN内通信（リバースプロキシ-アプリケーションサーバ間）は平文通信です。したがって、なんらかの攻撃者により上田の家のネットワークに侵入を許していた場合、情報は流出します。\n        </li>\n        <li>仕様の誤り・動作のバグなどを見つけられた方は連絡をください</li>\n        <li>機能の追加要望などは言ってくれれば対応するかもしれません</li>\n        <li>\n          コードが書ける人は自分で書いてプルリク送るとレビューの上マージします\n        </li>\n        <li>\n          UIがダサいのは上田のセンスの問題です。気に入らない人がいたらデザインをください。\n        </li>\n      </ul>\n    </Template>\n  );\n};\n\nexport default Home;\n","import { Button, ButtonProps, CircularProgress } from \"@mui/material\";\n\nexport type UploadButtonProps = {\n  disable: boolean;\n  loading?: boolean;\n  successText?: string;\n  errorText?: string;\n  handleButtonClick: ButtonProps[\"onClick\"];\n};\n\nconst UploadButton: React.FC<UploadButtonProps> = (props) => (\n  <>\n    <Button\n      variant=\"contained\"\n      color={\n        props.successText ? \"success\" : props.errorText ? \"error\" : \"primary\"\n      }\n      disabled={props.disable || props.loading}\n      onClick={props.handleButtonClick}\n      fullWidth\n    >\n      {props.loading && <CircularProgress size={24} />}\n      {!props.loading &&\n        !props.successText &&\n        !props.errorText &&\n        props.children}\n      {props.successText}\n      {props.errorText}\n    </Button>\n  </>\n);\n\nexport default UploadButton;\n","import { useDropzone } from \"react-dropzone\";\nimport { Paper } from \"@mui/material\";\nimport styled from \"styled-components\";\nexport type UploadAreaProps = {\n  acceptedFiles: File[];\n  setAcceptedFiles: (files: File[]) => void;\n};\n\nconst StyledPaper = styled(Paper)`\n  height: 50vh;\n  margin: 1ex auto;\n`;\nconst GuideText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\nconst UploadArea: React.FC<UploadAreaProps> = (props) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \".xlsx\",\n    onDropAccepted: (files: File[]) => props.setAcceptedFiles(files),\n  });\n  const { ref, ...rootProps } = getRootProps();\n  return (\n    <div ref={ref}>\n      <StyledPaper {...rootProps} elevation={3}>\n        <input {...getInputProps()} data-testid=\"dropzone\" />\n        {props.acceptedFiles.length === 0 ? (\n          <GuideText>\n            分析対象のファイルをドラッグアンドドロップするかクリックして選択してください\n          </GuideText>\n        ) : (\n          <GuideText>\n            <ol>\n              {props.acceptedFiles.map((f) => (\n                <li key={f.name}>{f.name}</li>\n              ))}\n            </ol>\n          </GuideText>\n        )}\n      </StyledPaper>\n    </div>\n  );\n};\nexport default UploadArea;\n","import React from \"react\";\nimport UploadButton from \"../atom/UploadButton\";\nimport UploadArea from \"../molecules/UploadArea\";\n\nexport type FileUploaderProps = {\n  acceptedFiles: File[];\n  setAcceptedFiles: (files: File[]) => void;\n  handleUpload: () => void;\n  successText?: string;\n  errorText?: string;\n  loading: boolean;\n};\n\nconst FileUploader: React.FC<FileUploaderProps> = (props) => {\n  return (\n    <>\n      <UploadArea\n        acceptedFiles={props.acceptedFiles}\n        setAcceptedFiles={props.setAcceptedFiles}\n      />\n      <UploadButton\n        successText={props.successText}\n        errorText={props.errorText}\n        loading={props.loading}\n        disable={props.acceptedFiles.length === 0}\n        handleButtonClick={props.handleUpload}\n      >\n        アップロードして分析を実施\n      </UploadButton>\n    </>\n  );\n};\nexport default FileUploader;\n","import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  MetricsValue: any;\n  /**\n   * Create scalar that ignores normal serialization/deserialization, since\n   * that will be handled by the multipart request spec\n   */\n  Upload: any;\n};\n\n/** 企業のデータを表す型で企業名称とMetricsの配列を持つ */\nexport type CompanyData = {\n  __typename?: 'CompanyData';\n  companyName: Scalars['String'];\n  metrics: Metrics;\n};\n\n/** 企業のデータを表す型で企業名称とMetricsの配列を持つ */\nexport type CompanyDataInput = {\n  companyName: Scalars['String'];\n  metrics: MetricsInput;\n};\n\nexport type FileUploadMutation = {\n  __typename?: 'FileUploadMutation';\n  companyData: Array<CompanyData>;\n  ok?: Maybe<Scalars['Boolean']>;\n};\n\n/** 財務指標を表す型で年度・指標名称・値を持つ */\nexport type Metrics = {\n  __typename?: 'Metrics';\n  metricsName: Scalars['String'];\n  metricsValues: Array<Scalars['MetricsValue']>;\n  metricsYears: Array<Scalars['Int']>;\n};\n\n/** 財務指標を表す型で年度・指標名称・値を持つ */\nexport type MetricsInput = {\n  metricsName: Scalars['String'];\n  metricsValues: Array<Scalars['MetricsValue']>;\n  metricsYears: Array<Scalars['Int']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  uploadSpeedaExcel?: Maybe<FileUploadMutation>;\n};\n\n\nexport type MutationUploadSpeedaExcelArgs = {\n  files?: Maybe<Array<Maybe<Scalars['Upload']>>>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** ROICドライバ計算を行うクエリ。dataに計算を行うデータを渡し、metricsに必要なカラムを指定する。デフォルト値（空配列）の場合すべてのカラムが帰る */\n  calcDrivers: Array<CompanyData>;\n  /** ROIC計算を行うクエリ。dataに計算を行うデータを渡し、metricsに必要なカラムを指定する。デフォルト値（空配列）の場合すべてのカラムが帰る */\n  calcRoic: Array<CompanyData>;\n  localCompanyData: Array<CompanyData>;\n};\n\n\nexport type QueryCalcDriversArgs = {\n  data?: Maybe<Array<Maybe<CompanyDataInput>>>;\n  metrics?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryCalcRoicArgs = {\n  data?: Maybe<Array<Maybe<CompanyDataInput>>>;\n  metrics?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type UploadExcelMutationVariables = Exact<{\n  files: Array<Scalars['Upload']> | Scalars['Upload'];\n}>;\n\n\nexport type UploadExcelMutation = { __typename?: 'Mutation', uploadSpeedaExcel?: Maybe<{ __typename?: 'FileUploadMutation', companyData: Array<{ __typename?: 'CompanyData', companyName: string, metrics: { __typename?: 'Metrics', metricsName: string, metricsValues: Array<any>, metricsYears: Array<number> } }> }> };\n\nexport type GetLocalDataQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetLocalDataQuery = { __typename?: 'Query', localCompanyData: Array<{ __typename?: 'CompanyData', companyName: string, metrics: { __typename?: 'Metrics', metricsName: string, metricsValues: Array<any>, metricsYears: Array<number> } }> };\n\nexport type CalcRoicWaccQueryVariables = Exact<{\n  data?: Maybe<Array<Maybe<CompanyDataInput>> | Maybe<CompanyDataInput>>;\n}>;\n\n\nexport type CalcRoicWaccQuery = { __typename?: 'Query', calcDrivers: Array<{ __typename?: 'CompanyData', companyName: string, metrics: { __typename?: 'Metrics', metricsName: string, metricsValues: Array<any>, metricsYears: Array<number> } }>, calcRoic: Array<{ __typename?: 'CompanyData', companyName: string, metrics: { __typename?: 'Metrics', metricsName: string, metricsValues: Array<any>, metricsYears: Array<number> } }> };\n\n\nexport const UploadExcelDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UploadExcel\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"files\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Upload\"}}}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"uploadSpeedaExcel\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"files\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"files\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"companyData\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"companyName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metrics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsValues\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsYears\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<UploadExcelMutation, UploadExcelMutationVariables>;\nexport const GetLocalDataDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetLocalData\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"localCompanyData\"},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"companyName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metrics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsValues\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsYears\"}}]}}]}}]}}]} as unknown as DocumentNode<GetLocalDataQuery, GetLocalDataQueryVariables>;\nexport const CalcRoicWaccDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"calcRoicWacc\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CompanyDataInput\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"calcDrivers\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"companyName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metrics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsValues\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsYears\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"calcRoic\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"companyName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metrics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsValues\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"metricsYears\"}}]}}]}}]}}]} as unknown as DocumentNode<CalcRoicWaccQuery, CalcRoicWaccQueryVariables>;","import { useTabItems } from \"./hooks/useTabItems\";\nimport React, { useState } from \"react\";\nimport { useMutation, useReactiveVar } from \"@apollo/client\";\nimport Template from \"../template/Template\";\nimport FileUploader from \"../organisms/FileUploader\";\nimport { useHistory } from \"react-router\";\nimport { UploadExcelDocument } from \"../generated/graphql\";\nimport {\n  companySettingVar,\n  isDataLoadedVar,\n  localCompanyDataVar,\n} from \"../store\";\n\nexport type NewFilePresProps = {\n  acceptedFiles: File[];\n  setAcceptedFiles: (files: File[]) => void;\n  handleUpload: () => void;\n  successText?: string;\n  errorText?: string;\n  loading: boolean;\n};\n\nexport const NewFilePres: React.FC<NewFilePresProps> = (props) => {\n  const isDataLoaded = useReactiveVar(isDataLoadedVar);\n  const tabItems = useTabItems(isDataLoaded);\n  return (\n    <Template tabItems={tabItems} tabSelected={1}>\n      <FileUploader {...props} />\n    </Template>\n  );\n};\n\nconst NewFile: React.FC = () => {\n  const [acceptedFiles, setAcceptedFiles] = useState<File[]>([]);\n  const history = useHistory();\n  const [uploadFunc, { data, loading, error }] = useMutation(\n    UploadExcelDocument,\n    {\n      onCompleted(data) {\n        const localData = data.uploadSpeedaExcel?.companyData.map((d) => {\n          const { __typename: __data, ...others } = d;\n          const { __typename: __metrics, ...othersMetrics } = d.metrics;\n          others.metrics = othersMetrics;\n          return others;\n        });\n        localCompanyDataVar(localData);\n        isDataLoadedVar(true);\n        const colors = [\n          \"#4E79A7\",\n          \"#A0CBE8\",\n          \"#F28E2B\",\n          \"#FFBE7D\",\n          \"#59A14F\",\n          \"#8CD17D\",\n          \"#B6992D\",\n          \"#F1CE63\",\n          \"#499894\",\n          \"#86BCB6\",\n          \"#E15759\",\n          \"#FF9D9A\",\n          \"#79706E\",\n          \"#BAB0AC\",\n          \"#D37295\",\n          \"#FABFD2\",\n          \"#B07AA1\",\n          \"#D4A6C8\",\n          \"#9d7660\",\n          \"#D7B5A6\",\n        ];\n        companySettingVar(\n          [...new Set(localData?.map((d) => d.companyName))].map((d, i) => ({\n            name: d,\n            visibility: true,\n            color: colors[i % colors.length],\n          }))\n        );\n        console.info(localData);\n        window.setTimeout(() => history.push(\"/table\"), 800);\n      },\n      onError(error) {\n        console.error(error.message);\n      },\n    }\n  );\n  const handleUpload = async () => {\n    await uploadFunc({ variables: { files: acceptedFiles } });\n  };\n  return (\n    <NewFilePres\n      {...{\n        acceptedFiles,\n        setAcceptedFiles,\n        handleUpload,\n        successText: !!(!error && data)\n          ? `${\n              new Set(\n                data?.uploadSpeedaExcel?.companyData?.map((c) => c.companyName)\n              ).size\n            }社のデータを読み取りました。データ確認画面に遷移します。`\n          : undefined,\n        loading,\n        errorText: error\n          ? `エラーが発生しました(${error.message})。ファイルを確認の上解決しない場合は連絡をください。`\n          : undefined,\n      }}\n    />\n  );\n};\n\nexport default NewFile;\n","import { useState } from \"react\";\n\nexport const useModal = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const handleModalOpen = () => setModalOpen(true);\n  const handleModalClose = () => setModalOpen(false);\n  return { modalOpen, handleModalOpen, handleModalClose };\n};\n","import { useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport {\n  CalcRoicWaccDocument,\n  GetLocalDataDocument,\n  CompanyData,\n} from \"../../generated/graphql\";\n\nexport const useRoicWacc = (onComplete?: (data: CompanyData[]) => void) => {\n  const [data, setData] = useState<CompanyData[]>([]);\n  // ローカルに保存されたエクセル読み取り結果を引っ張る\n  useQuery(GetLocalDataDocument, {\n    onCompleted: async (queryResponse) => {\n      const localCompanyData = queryResponse.localCompanyData;\n      setData(localCompanyData);\n      // ROIC計算を行う\n      await refetchRoic({ data: localCompanyData });\n      onComplete && onComplete(localCompanyData);\n    },\n  });\n  // ROICやドライバを計算するクエリ\n  const { refetch: refetchRoic, loading, error } = useQuery(\n    CalcRoicWaccDocument,\n    {\n      // ローカルの状態を読み込むまではとりあえず空配列を投げる\n      variables: { data: [] },\n      onCompleted: (queryResponse) => {\n        // 既存データに取得したデータをマージして企業名称でソートをする\n        setData((prevData) =>\n          [\n            ...prevData,\n            ...queryResponse.calcRoic,\n            ...queryResponse.calcDrivers,\n          ].sort((a, b) =>\n            a.companyName === b.companyName\n              ? 0\n              : a.companyName > b.companyName\n              ? 1\n              : -1\n          )\n        );\n      },\n      // TODO: Error処理。バックエンド側も実装必要。 Issue #3\n      onError: (err) => console.error(err),\n    }\n  );\n  return { data, loading, error };\n};\n","import { CompanyData } from \"../generated/graphql\";\nimport { Data } from \"plotly.js\";\nexport function toTableColumn(\n  data: CompanyData[],\n  filter: string[] | undefined = undefined\n) {\n  const columns = [\n    \"企業名称\",\n    \"年度\",\n    ...new Set(data.map((d) => d.metrics.metricsName)),\n  ].map((c) => ({ key: c, name: c }));\n  if (filter) {\n    return columns.filter((x) => ![...filter].includes(x.key));\n  } else {\n    return columns;\n  }\n}\n\nexport function toTableRow(data: CompanyData[]) {\n  /*\n   フロントエンドにこの複雑なロジックがあるのはあまりイケていない気がしている\n   ただバックエンドに流すとしてもデータ構造（不特定のキーのObjectのList）がGraphQLと嚙み合わないので、\n   文字列でもらってJSON.parseするそれはそれでイケていないやり方になる\n   そもそもGraphQLと今回の要件が嚙み合わない気もする\n  */\n  const yearCompanyMap = new Map(\n    [\n      ...new Set(\n        data.flatMap((d) =>\n          d.metrics.metricsYears.reduce(\n            (prev, year) => [\n              ...prev,\n              JSON.stringify({\n                year: year,\n                companyName: d.companyName,\n              }),\n            ],\n            [] as string[]\n          )\n        )\n      ),\n    ].map((t) => [t, [] as { [key: string]: any }[]])\n  );\n  data.forEach((d) =>\n    d.metrics.metricsYears.forEach((year, i) => {\n      yearCompanyMap\n        .get(JSON.stringify({ year: year, companyName: d.companyName }))\n        ?.push({ [d.metrics.metricsName]: d.metrics.metricsValues[i] });\n    })\n  );\n  const rows = [] as { [key: string]: any }[];\n  yearCompanyMap.forEach((value, key) => {\n    const row = value.reduce((prev, current) => {\n      return Object.assign(prev, current);\n    }, {});\n    const yearCompanyName = JSON.parse(key);\n    Object.assign(row, {\n      企業名称: yearCompanyName.companyName,\n      年度: yearCompanyName.year,\n    });\n    rows.push(row);\n  });\n  return rows;\n}\n\nexport function toScatterData(\n  data: CompanyData[],\n  x: string,\n  y: string,\n  yearIndex: number,\n  companyColor: { [company: string]: number | string }\n): Data[] {\n  const companies = [...new Set(data.map((d) => d.companyName))];\n  const xAxisData = data\n    .filter((d) => d.metrics.metricsName === x)\n    .reduce(\n      (prev, current) =>\n        prev.set(current.companyName, current.metrics.metricsValues[yearIndex]),\n      new Map()\n    );\n  const yAxisData = data\n    .filter((d) => d.metrics.metricsName === y)\n    .reduce(\n      (prev, current) =>\n        prev.set(current.companyName, current.metrics.metricsValues[yearIndex]),\n      new Map()\n    );\n  return companies.map((company) => ({\n    x: [xAxisData.get(company)],\n    y: [yAxisData.get(company)],\n    type: \"scatter\",\n    mode: \"text+markers\",\n    name: company,\n    text: company,\n    textposition: \"top center\",\n    marker: { size: 15, color: companyColor[company] },\n  }));\n}\n\nexport function toTreeData(\n  data: CompanyData[],\n  companyColor: { [company: string]: number | string }\n): Data[] {\n  const metrics_position: {\n    [metric: string]: { xaxis: string; yaxis: string };\n  } = {\n    ROIC: { xaxis: \"x\", yaxis: \"y\" },\n    投下資本回転率: { xaxis: \"x2\", yaxis: \"y2\" },\n    NOPATマージン: { xaxis: \"x2\", yaxis: \"y3\" },\n    固定資産回転率: { xaxis: \"x3\", yaxis: \"y4\" },\n    運転資本回転率: { xaxis: \"x3\", yaxis: \"y5\" },\n    販管費率: { xaxis: \"x3\", yaxis: \"y6\" },\n    売上原価率: { xaxis: \"x3\", yaxis: \"y7\" },\n  };\n  return [\n    \"ROIC\",\n    \"投下資本回転率\",\n    \"NOPATマージン\",\n    \"固定資産回転率\",\n    \"運転資本回転率\",\n    \"販管費率\",\n    \"売上原価率\",\n  ].flatMap((metricsName) =>\n    data\n      .filter((d) => d.metrics.metricsName === metricsName)\n      .map((d) => ({\n        x: d.metrics.metricsYears,\n        y: d.metrics.metricsValues,\n        type: \"scatter\",\n        mode: \"lines+markers\",\n        xaxis: metrics_position[d.metrics.metricsName].xaxis,\n        yaxis: metrics_position[d.metrics.metricsName].yaxis,\n        marker: { color: companyColor[d.companyName] },\n      }))\n  );\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n  ModalProps,\n  Typography,\n} from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nexport type ColumnFilterModalProps = {\n  columns: string[];\n  filter: string[] | undefined;\n  handleFilterChange: (col: string | string[]) => void;\n  open: boolean;\n  onClose: ModalProps[\"onClose\"];\n};\nconst ModalContent = styled.div`\n  background-color: white;\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  transform: translate(-50%, -30%);\n  width: 50%;\n  max-height: 50%;\n  overflow: scroll;\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  column-gap: 10px;\n  align-items: center;\n`;\nconst ColumnFilterModal: React.FC<ColumnFilterModalProps> = (props) => {\n  const handleAllUncheck = useCallback(() => {\n    props.handleFilterChange(props.columns);\n  }, [props]);\n  const handleAllCheck = useCallback(() => {\n    props.handleFilterChange([]);\n  }, [props]);\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <ModalContent>\n        <FlexContainer>\n          <Typography>表示するカラムを選択</Typography>\n          <Button variant=\"contained\" onClick={handleAllCheck}>\n            全選択\n          </Button>\n          <Button variant=\"contained\" onClick={handleAllUncheck}>\n            全解除\n          </Button>\n        </FlexContainer>\n        <List>\n          {props.columns.map((col) => (\n            <ListItem onClick={(e) => props.handleFilterChange(col)} key={col}>\n              <ListItemIcon>\n                {props.filter && props.filter.includes(col) ? (\n                  <CheckBoxOutlineBlank />\n                ) : (\n                  <CheckBox />\n                )}\n              </ListItemIcon>\n              <ListItemText primary={col} />\n            </ListItem>\n          ))}\n        </List>\n      </ModalContent>\n    </Modal>\n  );\n};\nexport default ColumnFilterModal;\n","import Template from \"../template/Template\";\nimport { useRoicWacc, useTabItems, useModal } from \"./hooks\";\nimport DataGrid from \"react-data-grid\";\nimport { useMemo, useState } from \"react\";\nimport rowGrouper from \"lodash.groupby\";\nimport { toTableColumn, toTableRow } from \"../util/dataTransform\";\nimport { Button } from \"@mui/material\";\nimport { Save, PermDataSetting } from \"@mui/icons-material\";\nimport styled from \"styled-components\";\nimport ColumnFilterModal from \"../organisms/ColumnFilterModal\";\nimport { createCsvString } from \"../util/createCsvString\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 10px 0;\n  column-gap: 10px;\n`;\nconst Table: React.FC = () => {\n  const tabItems = useTabItems();\n  // データの読み出しと計算\n  const { data: tableData, loading, error } = useRoicWacc((data) =>\n    setExpandedGroupIds(new Set(data.map((d) => d.companyName)))\n  );\n  //　モーダル関連\n  const { modalOpen, handleModalOpen, handleModalClose } = useModal();\n  // テーブル関連\n  // テーブルの折りたたみ\n  const [expandedGroupIds, setExpandedGroupIds] = useState<\n    ReadonlySet<unknown>\n  >(new Set());\n  // テーブルの行列を作る\n  const rows = useMemo(() => toTableRow(tableData), [tableData]);\n  const allColumns = useMemo(\n    () =>\n      toTableColumn(tableData).filter(\n        (x) => x.key !== \"企業名称\" && x.key !== \"年度\"\n      ),\n    [tableData]\n  );\n  const [columnFilter, setColumnFilter] = useState<string[] | undefined>();\n  const handleFilterChange = (column: string | string[]) => {\n    if (typeof column === \"string\") {\n      setColumnFilter((prev) => {\n        if (prev) {\n          if (prev.includes(column)) {\n            return prev.filter((f) => f !== column);\n          } else {\n            return [...prev, column];\n          }\n        } else {\n          return [column];\n        }\n      });\n    } else {\n      setColumnFilter(column);\n    }\n  };\n  const filteredColumns = useMemo(\n    () => toTableColumn(tableData, columnFilter),\n    [columnFilter, tableData]\n  );\n  // CSVダウンロード\n  const handleDownloadClick = () => {\n    const csvString = createCsvString(rows, filteredColumns);\n    const bom = new Uint8Array([0xef, 0xbb, 0xbf]);\n    const blob = new Blob([bom, csvString], { type: \"text/csv\" });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"QuickRoicOutput.csv\";\n    a.click();\n    a.remove();\n  };\n  return (\n    <Template\n      tabItems={tabItems}\n      tabSelected={2}\n      loading={loading}\n      error={error}\n    >\n      <ColumnFilterModal\n        handleFilterChange={handleFilterChange}\n        open={modalOpen}\n        columns={allColumns.map((c) => c.name)}\n        filter={columnFilter}\n        onClose={handleModalClose}\n      />\n      <ButtonContainer>\n        <Button\n          startIcon={<PermDataSetting />}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={handleModalOpen}\n        >\n          表示カラムの設定\n        </Button>\n        <Button\n          startIcon={<Save />}\n          variant=\"contained\"\n          onClick={handleDownloadClick}\n        >\n          Download As CSV\n        </Button>\n      </ButtonContainer>\n      <DataGrid\n        rows={rows}\n        columns={filteredColumns}\n        style={{ height: \"75vh\" }}\n        groupBy={[\"企業名称\"]}\n        rowGrouper={rowGrouper}\n        className=\"rdg-light\"\n        expandedGroupIds={expandedGroupIds}\n        onExpandedGroupIdsChange={setExpandedGroupIds}\n        defaultColumnOptions={{ resizable: true }}\n      />\n    </Template>\n  );\n};\nexport default Table;\n","export function createCsvString(\n  rows: { [key: string]: any }[],\n  columns: { key: string }[]\n) {\n  const lines = [\n    columns.map((c) => c.key).join(\",\"),\n    ...rows.map((row) =>\n      columns\n        .reduce((prev, current) => (prev += row[current.key] + \",\"), \"\")\n        .slice(0, -1)\n    ),\n  ];\n  return lines.join(\"\\n\");\n}\n","import React, { useMemo, useState } from \"react\";\nimport Template from \"../template/Template\";\nimport { useRoicWacc, useTabItems, useIntervalFunc } from \"./hooks\";\nimport Plot from \"react-plotly.js\";\nimport { Layout } from \"plotly.js\";\nimport { toScatterData } from \"../util/dataTransform\";\nimport {\n  Grid,\n  IconButton,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from \"@mui/material\";\nimport { SxProps } from \"@mui/system\";\nimport { PlayArrow, Stop } from \"@mui/icons-material\";\nimport { companySettingVar } from \"../store\";\nimport { useReactiveVar } from \"@apollo/client\";\n\nconst Scatter: React.FC = () => {\n  const tabItems = useTabItems();\n  const [yearIndex, setYearIndex] = useState(0);\n  const { isActive: isYearMoving, toggleInterval } = useIntervalFunc(() => {\n    setYearIndex((y) => {\n      if (y === data[0].metrics.metricsYears.length - 2) {\n        return 0;\n      }\n      return y + 1;\n    });\n  }, 1000);\n  const { data, loading, error } = useRoicWacc((data) => {\n    setYearIndex(data[0].metrics.metricsYears.length - 2);\n  });\n  const companySetting = useReactiveVar(companySettingVar);\n  const companyColor = useMemo<{ [key: string]: string }>(\n    () =>\n      companySetting.reduce(\n        (prev, setting) =>\n          Object.assign(prev, { [setting.name]: setting.color }),\n        {}\n      ),\n    [companySetting]\n  );\n  const companyVisibility = useMemo<{ [key: string]: string }>(\n    () =>\n      companySetting.reduce(\n        (prev, setting) =>\n          Object.assign(prev, { [setting.name]: setting.visibility }),\n        {}\n      ),\n    [companySetting]\n  );\n  const roicWaccData = useMemo(\n    () =>\n      toScatterData(\n        data.filter((d) => companyVisibility[d.companyName]),\n        \"ROIC\",\n        \"WACC\",\n        yearIndex,\n        companyColor\n      ),\n    [companyColor, companyVisibility, data, yearIndex]\n  );\n  const roicWaccLayout: Partial<Layout> = {\n    showlegend: false,\n    title: {\n      text: \"WACC-ROICプロット\",\n    },\n    xaxis: {\n      title: \"ROIC\",\n      rangemode: \"tozero\",\n      tickformat: \",.1%\",\n    },\n    yaxis: {\n      title: \"WACC\",\n      rangemode: \"tozero\",\n      tickformat: \",.1%\",\n    },\n    shapes: [\n      {\n        type: \"line\",\n        x0: 0,\n        y0: 0,\n        // TODO: ROICとWACCのマックスを設定する Issue #2\n        x1: 0.2,\n        y1: 0.2,\n        xref: \"x\",\n        yref: \"y\",\n        line: {\n          width: 1,\n          dash: \"dot\",\n        },\n      },\n    ],\n  };\n  const nopatCapitalData = useMemo(\n    () =>\n      toScatterData(\n        data.filter((d) => companyVisibility[d.companyName]),\n        \"NOPATマージン\",\n        \"投下資本回転率\",\n        yearIndex,\n        companyColor\n      ),\n    [companyColor, companyVisibility, data, yearIndex]\n  );\n  const nopatCapitalLayout: Partial<Layout> = {\n    showlegend: false,\n    title: {\n      text: \"NOPATマージン-投下資本回転率プロット\",\n    },\n    xaxis: {\n      title: \"NOPATマージン\",\n      rangemode: \"tozero\",\n      tickformat: \",.1%\",\n    },\n    yaxis: {\n      title: \"投下資本回転率\",\n      rangemode: \"tozero\",\n      tickformat: \",.1%\",\n    },\n  };\n  const gridSx: SxProps = { display: \"flex\", justifyContent: \"center\" };\n  return (\n    <Template\n      tabItems={tabItems}\n      tabSelected={3}\n      loading={loading}\n      error={error}\n    >\n      {data && data.length > 0 && (\n        <>\n          <Grid container sx={gridSx}>\n            <Grid item md={6} sm={12} sx={gridSx}>\n              <Plot data={roicWaccData} layout={roicWaccLayout} />\n            </Grid>\n            <Grid item md={6} sm={12} sx={gridSx}>\n              <Plot data={nopatCapitalData} layout={nopatCapitalLayout} />\n            </Grid>\n          </Grid>\n          <Grid container sx={{ columnGap: 2, alignItems: \"center\" }}>\n            <Typography\n              variant=\"body1\"\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              表示年度\n            </Typography>\n            <ToggleButtonGroup\n              color=\"primary\"\n              value={data[0].metrics.metricsYears[yearIndex + 1]}\n            >\n              {data[0].metrics.metricsYears\n                .filter((y, i) => i !== 0)\n                .map((y, i) => (\n                  <ToggleButton\n                    value={y}\n                    key={y}\n                    onClick={() => {\n                      setYearIndex(i);\n                    }}\n                  >\n                    {y}\n                  </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            <IconButton color=\"primary\" onClick={() => toggleInterval()}>\n              {isYearMoving ? <Stop /> : <PlayArrow />}\n            </IconButton>\n          </Grid>\n        </>\n      )}\n    </Template>\n  );\n};\nexport default Scatter;\n","import { useCallback, useState } from \"react\";\n\nexport const useIntervalFunc = (func: () => void, interval: number) => {\n  const [isActive, setIsActive] = useState(false);\n  const [intervalId, setIntervalId] = useState<number | undefined>(undefined);\n  const startInterval = useCallback(() => {\n    if (isActive) {\n      return;\n    }\n    const id = window.setInterval(func, interval);\n    setIsActive(true);\n    setIntervalId(id);\n  }, [func, interval, isActive]);\n  const stopInterval = useCallback(() => {\n    window.clearInterval(intervalId);\n    setIsActive(false);\n    setIntervalId(undefined);\n  }, [intervalId]);\n  const toggleInterval = useCallback(() => {\n    if (isActive) {\n      stopInterval();\n    } else {\n      startInterval();\n    }\n  }, [isActive, startInterval, stopInterval]);\n  return { isActive, startInterval, stopInterval, toggleInterval };\n};\n","import { Layout } from \"plotly.js\";\nimport { useMemo } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport Template from \"../template/Template\";\nimport { useRoicWacc, useTabItems } from \"./hooks\";\nimport { toTreeData } from \"../util/dataTransform\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { companySettingVar } from \"../store\";\n\nconst Tree: React.FC = () => {\n  const tabItems = useTabItems();\n  const { data, loading, error } = useRoicWacc();\n  const companySetting = useReactiveVar(companySettingVar);\n  const companyColor = useMemo<{ [key: string]: string }>(\n    () =>\n      companySetting.reduce(\n        (prev, setting) =>\n          Object.assign(prev, { [setting.name]: setting.color }),\n        {}\n      ),\n    [companySetting]\n  );\n  const companyVisibility = useMemo<{ [key: string]: string }>(\n    () =>\n      companySetting.reduce(\n        (prev, setting) =>\n          Object.assign(prev, { [setting.name]: setting.visibility }),\n        {}\n      ),\n    [companySetting]\n  );\n  const layout: Partial<Layout> = {\n    annotations: [\n      {\n        text: \"ROIC\",\n        showarrow: false,\n        align: \"center\",\n        x: 0.135,\n        y: 1.1,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"NOPATマージン\",\n        showarrow: false,\n        align: \"center\",\n        x: 0.5,\n        y: 1.1,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"投下資本回転率\",\n        showarrow: false,\n        align: \"center\",\n        x: 0.5,\n        y: 0.5,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"売上原価率\",\n        showarrow: false,\n        x: 0.868,\n        y: 1.1,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"販管費率\",\n        showarrow: false,\n        x: 0.865,\n        y: 0.82,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"運転資本回転率\",\n        showarrow: false,\n        align: \"center\",\n        x: 0.88,\n        y: 0.5,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n      {\n        text: \"固定資産回転率\",\n        showarrow: false,\n        align: \"center\",\n        x: 0.88,\n        y: 0.2,\n        xref: \"paper\",\n        yref: \"paper\",\n      },\n    ],\n    xaxis: {\n      domain: [0, 0.3],\n      anchor: \"y\",\n    },\n    xaxis2: {\n      domain: [0.3 + 0.1 / 2, 0.6 + 0.1 / 2],\n      anchor: \"y2\",\n    },\n    xaxis3: {\n      domain: [0.7, 1.0],\n      anchor: \"y4\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      tickformat: \",.0%\",\n      anchor: \"x\",\n    },\n    yaxis2: {\n      domain: [0, 0.45],\n      anchor: \"x2\",\n    },\n    yaxis3: {\n      domain: [0.55, 1],\n      tickformat: \",.0%\",\n      anchor: \"x2\",\n    },\n    yaxis4: {\n      domain: [0, 0.35 / 2],\n      anchor: \"x3\",\n    },\n    yaxis5: {\n      domain: [0.45 - 0.35 / 2, 0.45],\n      anchor: \"x3\",\n    },\n    yaxis6: {\n      domain: [0.585, 0.585 + 0.35 / 2],\n      tickformat: \",.0%\",\n      anchor: \"x3\",\n    },\n    yaxis7: {\n      domain: [1 - 0.35 / 2, 1.0],\n      tickformat: \",.0%\",\n\n      anchor: \"x3\",\n    },\n    showlegend: false,\n  };\n  const roicData = useMemo(\n    () =>\n      toTreeData(\n        data.filter((d) => companyVisibility[d.companyName]),\n        companyColor\n      ),\n    [companyColor, companyVisibility, data]\n  );\n  return (\n    <Template\n      tabItems={tabItems}\n      tabSelected={4}\n      loading={loading}\n      error={error}\n    >\n      {data && (\n        <Plot\n          style={{ width: \"100%\", height: \"80vh\" }}\n          data={roicData}\n          layout={layout}\n          config={{ responsive: false }}\n        />\n      )}\n    </Template>\n  );\n};\nexport default Tree;\n","import { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Chip, List, ListItem, Modal } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { SketchPicker, SketchPickerProps } from \"react-color\";\nimport { useModal } from \"../page/hooks\";\n\nexport type CompanySettingProps = {\n  companies: {\n    name: string;\n    color: string;\n    visibility: boolean;\n    setVisibility: (visibility: boolean) => void;\n    setColor: (color: string) => void;\n  }[];\n};\nfunction blackOrWhite(hexColor: string): string {\n  const r = parseInt(hexColor.substr(1, 2), 16);\n  const g = parseInt(hexColor.substr(3, 2), 16);\n  const b = parseInt(hexColor.substr(5, 2), 16);\n  return (r * 299 + g * 587 + b * 114) / 1000 < 128 ? \"white\" : \"black\";\n}\nconst CompanySetting: React.FC<CompanySettingProps> = (props) => {\n  const { modalOpen, handleModalOpen, handleModalClose } = useModal();\n  // react-colorに表示している色\n  const [color, setColor] = useState(\"#ffffff\");\n  const handleColorChange: SketchPickerProps[\"onChange\"] = (color, _) => {\n    setColor(color.hex);\n    props.companies[focusedCompanyIndex].setColor(color.hex);\n  };\n  // react-colorで変更する対象の企業の色変更のハンドラ\n  const [focusedCompanyIndex, setFocusedCompanyIndex] = useState(0);\n  return (\n    <>\n      <List>\n        {props.companies.map((c, i) => (\n          <ListItem key={c.name}>\n            <Chip\n              label={c.name}\n              onClick={() => {\n                handleModalOpen();\n                setColor(c.color);\n                setFocusedCompanyIndex(i);\n              }}\n              onDelete={() => c.setVisibility(!c.visibility)}\n              deleteIcon={c.visibility ? <Visibility /> : <VisibilityOff />}\n              sx={{\n                background: c.visibility ? c.color : \"silver\",\n                color: c.visibility ? blackOrWhite(c.color) : \"black\",\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Modal open={modalOpen} onClose={handleModalClose}>\n        <div\n          style={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <SketchPicker color={color} onChange={handleColorChange} />\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default CompanySetting;\n","import { Typography } from \"@mui/material\";\nimport CompanySetting from \"../organisms/CompanySetting\";\nimport Template from \"../template/Template\";\nimport { useCompanySettings, useTabItems } from \"./hooks\";\n\nconst Setting: React.FC = () => {\n  const tabItems = useTabItems(true);\n  const companySetting = useCompanySettings();\n  return (\n    <Template tabItems={tabItems} tabSelected={5}>\n      <Typography variant=\"h6\">企業の表示設定</Typography>\n      <CompanySetting companies={companySetting} />\n    </Template>\n  );\n};\nexport default Setting;\n","import { useReactiveVar } from \"@apollo/client\";\nimport { companySettingVar } from \"../../store\";\nimport { useMemo } from \"react\";\nimport { CompanySettingProps } from \"../../organisms/CompanySetting\";\n\nexport const useCompanySettings = () => {\n  const companySettings = useReactiveVar(companySettingVar);\n  const companiesSettingProps = useMemo<CompanySettingProps[\"companies\"]>(\n    () =>\n      companySettings.map((company, index) => ({\n        setColor: (color) => {\n          companySettingVar([\n            ...companySettings.slice(0, index),\n            { ...company, color },\n            ...(index === companySettings.length - 1\n              ? []\n              : companySettings.slice(index + 1)),\n          ]);\n        },\n        setVisibility: (visibility) => {\n          companySettingVar([\n            ...companySettings.slice(0, index),\n            { ...company, visibility },\n            ...(index === companySettings.length - 1\n              ? []\n              : companySettings.slice(index + 1)),\n          ]);\n        },\n        ...company,\n      })),\n    [companySettings]\n  );\n  return companiesSettingProps;\n};\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider as SsThemeProvider } from \"styled-components\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  StyledEngineProvider,\n} from \"@mui/material/styles\";\nimport theme from \"./theme\";\nimport Home from \"./page/Home\";\nimport NewFile from \"./page/NewFile\";\nimport Table from \"./page/Table\";\nimport Scatter from \"./page/Scatter\";\nimport Tree from \"./page/Tree\";\nimport { ReactElement } from \"react\";\nimport Setting from \"./page/Setting\";\n\nconst Providers: React.FC = (props) => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <StyledEngineProvider injectFirst>\n      <MuiThemeProvider theme={theme}>\n        <SsThemeProvider theme={theme}>{props.children}</SsThemeProvider>\n      </MuiThemeProvider>\n    </StyledEngineProvider>\n  </BrowserRouter>\n);\nconst routing: { path: string; component: ReactElement }[] = [\n  {\n    path: \"/\",\n    component: <Home />,\n  },\n  {\n    path: \"/new\",\n    component: <NewFile />,\n  },\n  {\n    path: \"/table\",\n    component: <Table />,\n  },\n  {\n    path: \"/scatter\",\n    component: <Scatter />,\n  },\n  {\n    path: \"/tree\",\n    component: <Tree />,\n  },\n  {\n    path: \"/setting\",\n    component: <Setting />,\n  },\n];\nfunction App() {\n  return (\n    <Providers>\n      <Switch>\n        {routing.map((r) => (\n          <Route path={r.path} exact>\n            {r.component}\n          </Route>\n        ))}\n      </Switch>\n    </Providers>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { typePolicies, typeDefs } from \"./store\";\n\nconst link = createUploadLink({ uri: process.env.REACT_APP_GRAPHQL_ENDPOINT });\nconst client = new ApolloClient({\n  link: link,\n  typeDefs,\n  cache: new InMemoryCache({\n    typePolicies,\n  }),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}