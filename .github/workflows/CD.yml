name: CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target: ["frontend", "backend"]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io 
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.target}}
          target: Dev
          cache-from: type=registry,ref=ghcr.io/${{ github.actor }}/quickroic/${{ matrix.target }}:latest
          cache-to: type=inline 
          push: true
          tags: ghcr.io/${{ github.actor }}/quickroic/${{ matrix.target }}:latest
  frontend:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io 
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: pulling image
        run: docker pull ghcr.io/${{ github.actor }}/quickroic/frontend:latest
      - name: build react app
        run: mkdir $PWD/build && docker run -v $PWD/build:/app/build ghcr.io/${{ github.actor }}/quickroic/frontend:latest bash  -c "REACT_APP_GRAPHQL_ENDPOINT=${{secrets.REACT_APP_GRAPHQL_ENDPOINT }} yarn build" 
      - name: deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
  python:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: ssh config
        run: mkdir ~/.ssh && echo "$SSH_SECRET" >> ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts && echo "$SSH_CONFIG" >> ~/.ssh/config
        env:
          SSH_SECRET: ${{secrets.SSH_SECRET}}
          KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}
          SSH_CONFIG: ${{secrets.SSH_CONFIG}}
      - name: create .env file
        run: echo "GRAPHQL_PORT=${{secrets.GRAPHQL_PORT}}" > .env
      - name: send .env
        run: rsync -avh ./.env DeploymentServer:~/quickroic/
      - name: send docker-compose
        run: rsync -avh ./docker-compose.prod.yml DeploymentServer:~/quickroic/
      - name: compose up
        run: ssh DeploymentServer "cd ~/quickroic;mv docker-compose.prod.yml docker-compose.yml;docker-compose pull;docker-compose up -d"